/*
	jQuery.mmenu toggles addon CSS
*/

@use "../inc/variables";
@use "../inc/colors";
@use "../inc/mixins";


input.mm-toggle,
input.mm-check {
  position: absolute;
  left: -10000px;
}

label.mm-toggle,
label.mm-check {
  margin: 0;
  position: absolute;
  bottom: 50%;
  z-index: 2;

  &:before {
    content: '';
    display: block;
  }
}

// styling
label.mm-toggle {
  border-radius: variables.$mm_toggleHeight;
  width: variables.$mm_toggleWidth;
  height: variables.$mm_toggleHeight;
  margin-bottom: -(variables.$mm_toggleHeight * 0.5);

  &:before {
    border-radius: variables.$mm_toggleHeight;
    width: variables.$mm_toggleHeight - 2;
    height: variables.$mm_toggleHeight - 2;
    margin: 1px;
  }
}

label.mm-check {
  width: variables.$mm_checkWidth;
  height: variables.$mm_checkHeight;
  margin-bottom: -(variables.$mm_checkHeight * 0.5);

  &:before {
    border-left: 3px solid;
    border-bottom: 3px solid;
    width: 40%;
    height: 20%;
    margin: 25% 0 0 20%;
    opacity: 0.1;

    @include mixins.mm-webkit-prefix('transform', rotate(-45deg));
  }
}

label.mm-check {
  width: variables.$mm_checkWidth;
  height: variables.$mm_checkHeight;
  margin-bottom: - calc(variables.$mm_checkHeight / 2);

  &:before {
    border-left: 3px solid;
    border-bottom: 3px solid;
    width: 40%;
    height: 20%;
    margin: 25% 0 0 20%;
    opacity: 0.1;

    @include mixins.mm-webkit-prefix('transform', rotate(-45deg));
  }
}

input.mm-check:checked~label.mm-check:before {
  opacity: 1;
}


// vertical submenu
.mm-menu.mm-vertical .mm-list {
  >li label {

    &.mm-toggle,
    &.mm-check {
      bottom: auto;
      margin-bottom: 0;
    }

    &.mm-toggle {
      top: (variables.$mm_btnSize - variables.$mm_toggleHeight ) * 0.5;

    }

    &.mm-check {
      top: (variables.$mm_btnSize - variables.$mm_checkHeight ) * 0.5;
    }
  }
}


// positioning
label {

  &.mm-toggle,
  &.mm-check {
    right: variables.$mm_padding * 2;
  }
}

label.mm-toggle {

  +a,
  +span {
    margin-right: variables.$mm_toggleWidth + (variables.$mm_padding * 2);
  }
}

label.mm-check {

  +a,
  +span {
    margin-right: variables.$mm_checkWidth + (variables.$mm_padding * 2);
  }
}

// positioning with subopen
a.mm-subopen+label {

  &.mm-toggle,
  &.mm-check {
    right: variables.$mm_subopenWidth + variables.$mm_padding;
  }
}

a.mm-subopen+label.mm-toggle {

  +a,
  +span {
    margin-right: variables.$mm_subopenWidth + variables.$mm_toggleWidth + variables.$mm_padding;
  }
}

a.mm-subopen+label.mm-check {

  +a,
  +span {
    margin-right: variables.$mm_subopenWidth + variables.$mm_checkWidth + variables.$mm_padding;
  }
}

// positioning with counter
em.mm-counter+a.mm-subopen+label {

  &.mm-toggle,
  &.mm-check {
    right: variables.$mm_counterWidth + variables.$mm_subopenWidth + variables.$mm_padding;
  }
}

em.mm-counter+a.mm-subopen+label.mm-toggle {

  +a,
  +span {
    margin-right: variables.$mm_counterWidth + variables.$mm_subopenWidth + variables.$mm_toggleWidth + variables.$mm_padding;
  }
}

em.mm-counter+a.mm-subopen+label.mm-check {

  +a,
  +span {
    margin-right: variables.$mm_counterWidth + variables.$mm_subopenWidth + variables.$mm_checkWidth + variables.$mm_padding;
  }
}

@include colors.mm_colors_toggles;
@include colors.mm_colors_checks;
