/**Manages width in a single place */

@use "../../base/extends/clearfix";
@use "../utilities/mixins/breakpoints";
@use "../utilities/mixins/grid";
@use "../utilities/variables";

.container {
  margin: 0 auto;
  max-width: variables.$grid-container-max-width;
  width: variables.$grid-container-width;

  &.fixed,
  .fixed & {
    width: variables.$grid-container-max-width;
  }
}

.container--full {
  width: 100%;
  height: 100%;

  &.fixed,
  .fixed & {
    width: variables.$grid-container-max-width;
  }
}

.row {
  @extend %clearfix;
}

/**Columns */
[class*=col-] {
  display: block;
  width: 100%;
  float: left;
  min-height: 1px;

  [dir="rtl"] & {
    float: right;
  }

  &[class*=offset],
  &[class*=push],
  &[class*=pull] {
    position: relative;
  }
}

.no-gutter.pad-gutter>[class*=col-] {
  padding: 0 variables.$grid-column-gutter*0.5;
}

/*
 * Extra small 
 */
@include grid.grid-base(xs);

@include grid.grid-columns(xs);

/*
 * Small 
 */
@include breakpoints.bp-min(s) {

  @include grid.grid-base(s);

  @include grid.grid-columns(s);
}

/*
 * Medium 
 */
@include breakpoints.bp-min(m) {

  @include grid.grid-base(m);

  @include grid.grid-columns(m);
}

/*
 * Large 
 */
@include breakpoints.bp-min(l) {

  @include grid.grid-base(l);

  @include grid.grid-columns(l);
}
